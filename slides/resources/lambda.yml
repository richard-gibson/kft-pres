AWSTemplateFormatVersion: "2010-09-09"
Resources:
  Role:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: "Allow"
          Action:
          - "sts:AssumeRole"
          Principal:
            Service:
            - "lambda.amazonaws.com"
        Version: "2012-10-17"
      ManagedPolicyArns:
      - Fn::Join:
        - ""
        - - "arn:"
          - Ref: "AWS::Partition"
          - ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
      Path: "/"
      Policies:
      - PolicyDocument:
          Statement:
          - Effect: "Allow"
            Action:
            - "logs:CreateLogStream"
            Resource:
            - Fn::Join:
              - ""
              - - "arn:"
                - Ref: "AWS::Partition"
                - ":logs:"
                - Ref: "AWS::Region"
                - ":"
                - Ref: "AWS::AccountId"
                - ":log-group:/aws/lambda/kug-example-service2-demo-definition:*"
          - Effect: "Allow"
            Action:
            - "logs:PutLogEvents"
            Resource:
            - Fn::Join:
              - ""
              - - "arn:"
                - Ref: "AWS::Partition"
                - ":logs:"
                - Ref: "AWS::Region"
                - ":"
                - Ref: "AWS::AccountId"
                - ":log-group:/aws/lambda/kug-example-service2-demo-definition:*"
                - ":*"
          - Effect: "Allow"
            Action:
            - "execute-api:ManageConnections"
            Resource:
            - "arn:aws:execute-api:*:*:*/@connections/*"
          Version: "2012-10-17"
        PolicyName: "demo-kug-example-service2-lambda"
  LogGroupMyFunction:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: "/aws/lambda/kug-example-service2-demo-myFunction2"
  FunctionMyFunction:
    Type: "AWS::Lambda::Function"
    DependsOn:
    - "LogGroupMyFunction"
    - "Role"
    Properties:
      Code:
        S3Bucket: "hexlabs-deployments"
        S3Key: "src"
      Handler: "index.handle"
      Role:
        Fn::GetAtt:
        - "Role"
        - "Arn"
      Runtime: "nodejs8.10"
  RestApi:
    Type: "AWS::ApiGateway::RestApi"
    Properties:
      Name: "demo-kug-example-service2"
  ApiGatewayResourceping:
    Type: "AWS::ApiGateway::Resource"
    Properties:
      ParentId:
        Fn::GetAtt:
        - "RestApi"
        - "RootResourceId"
      PathPart: "ping"
      RestApiId:
        Ref: "RestApi"
  MethodpingGET:
    Type: "AWS::ApiGateway::Method"
    Properties:
      HttpMethod: "GET"
      ResourceId:
        Ref: "ApiGatewayResourceping"
      RestApiId:
        Ref: "RestApi"
      ApiKeyRequired: false
      AuthorizationType: "None"
      Integration:
        IntegrationHttpMethod: "POST"
        Type: "AWS_PROXY"
        Uri:
          Fn::Join:
          - ""
          - - "arn:"
            - Ref: "AWS::Partition"
            - ":apigateway:"
            - Ref: "AWS::Region"
            - ":lambda:path/2015-03-31/functions/"
            - Fn::GetAtt:
              - "FunctionMyFunction"
              - "Arn"
            - "/invocations"
      MethodResponses: []
      RequestParameters: {}
  ApiDeployment6489edfd8b074aa182ea7ed268cd08ea:
    Type: "AWS::ApiGateway::Deployment"
    DependsOn:
    - "MethodpingGET"
    Properties:
      RestApiId:
        Ref: "RestApi"
      StageName: "demo"
  Permission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName:
        Fn::GetAtt:
        - "FunctionMyFunction"
        - "Arn"
      Principal:
        Fn::Join:
        - ""
        - - "apigateway."
          - Ref: "AWS::URLSuffix"
      SourceArn:
        Fn::Join:
        - ""
        - - "arn:"
          - Ref: "AWS::Partition"
          - ":execute-api:"
          - Ref: "AWS::Region"
          - ":"
          - Ref: "AWS::AccountId"
          - ":"
          - Ref: "RestApi"
          - "/*/*"
Outputs:
  ServiceEndpoint:
    Value:
      Fn::Join:
      - ""
      - - "https://"
        - Ref: "RestApi"
        - ".execute-api."
        - Ref: "AWS::Region"
        - "."
        - Ref: "AWS::URLSuffix"
        - "/demo"
    Description: "URL of the service"